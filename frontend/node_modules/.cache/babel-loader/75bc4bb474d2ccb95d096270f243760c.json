{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\nconst base_url = \"http://localhost:8080\";\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password, fName, lName, dob, address, phoneNo, gender, role, workCategory) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      fName,\n      lName,\n      dob,\n      address,\n      phoneNo,\n      gender,\n      role,\n      workCategory\n    });\n  }\n\n  addWorkDesc(id, workAmount, description, location, category) {\n    return axios.post(`${base_url}/user/regWorkDesc/${id}`, {\n      workAmount,\n      description,\n      location,\n      category\n    }, {\n      headers: authHeader()\n    });\n  }\n\n  updateUser(id, fName, lName, email, dob, phoneNo, gender, address) {\n    return axios.put(`${base_url}/user/update/${id}`, {\n      fName,\n      lName,\n      email,\n      dob,\n      phoneNo,\n      gender,\n      address\n    }, {\n      headers: authHeader()\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n  getUserDetails(id) {\n    return axios.get(base_url + \"details\", {\n      id\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"details\", JSON.stringify(response.data));\n      }\n\n      console.log(response.data);\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Anupam/Proj 2021/New folder/frontend/myapp/src/authentication/auth.service.js"],"names":["axios","authHeader","API_URL","base_url","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","fName","lName","dob","address","phoneNo","gender","role","workCategory","addWorkDesc","id","workAmount","description","location","category","headers","updateUser","put","getCurrentUser","parse","getItem","getUserDetails","get","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\nconst base_url = \"http://localhost:8080\";\r\n\r\nclass AuthService {\r\n\r\n\r\n\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password, fName, lName, dob, address, phoneNo, gender, role, workCategory) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n      fName,\r\n      lName,\r\n      dob,\r\n      address,\r\n      phoneNo,\r\n      gender,\r\n      role,\r\n      workCategory\r\n    });\r\n  }\r\n\r\n  addWorkDesc(id, workAmount, description, location, category) {\r\n    return axios.post(`${base_url}/user/regWorkDesc/${id}`, {\r\n      workAmount,\r\n      description,\r\n      location,\r\n      category\r\n    }, { headers: authHeader() });\r\n  }\r\n\r\n  updateUser(id, fName, lName, email, dob, phoneNo, gender, address) {\r\n    return axios.put(`${base_url}/user/update/${id}`, {\r\n      fName,\r\n      lName,\r\n      email,\r\n      dob,\r\n      phoneNo,\r\n      gender,\r\n      address\r\n    }, { headers: authHeader() });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n\r\n  getUserDetails(id) {\r\n    return axios\r\n      .get(base_url + \"details\", {\r\n        id\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"details\", JSON.stringify(response.data));\r\n        }\r\n\r\n        console.log(response.data);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n"]},"metadata":{},"sourceType":"module"}