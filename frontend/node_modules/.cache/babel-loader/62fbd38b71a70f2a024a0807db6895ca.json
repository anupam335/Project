{"ast":null,"code":"export default function authHeader() {\n  const h = new Headers();\n  const user = JSON.parse(localStorage.getItem('user'));\n  h.append('Content-Type', 'application/json');\n  const session = {\n    username: localStorage.getItem('user'),\n    token: localStorage.getItem('token')\n  };\n\n  if (session.user && session.token) {\n    h.append('user', session.username);\n    h.append('token', session.token);\n  }\n\n  return h; // if (user && user.accessToken) {\n  //    return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n  // //  return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  // } else {\n  //   return {};\n  // }\n}","map":{"version":3,"sources":["E:/Project/frontend/myapp/src/authentication/auth-header.js"],"names":["authHeader","h","Headers","user","JSON","parse","localStorage","getItem","append","session","username","token"],"mappings":"AAAA,eAAe,SAASA,UAAT,GAAsB;AACnC,QAAMC,CAAC,GAAG,IAAIC,OAAJ,EAAV;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEAN,EAAAA,CAAC,CAACO,MAAF,CAAS,cAAT,EAAwB,kBAAxB;AAEA,QAAMC,OAAO,GAAC;AACZC,IAAAA,QAAQ,EAAGJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CADC;AAEZI,IAAAA,KAAK,EAAEL,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFK,GAAd;;AAKA,MAAGE,OAAO,CAACN,IAAR,IAAgBM,OAAO,CAACE,KAA3B,EAAiC;AAC/BV,IAAAA,CAAC,CAACO,MAAF,CAAS,MAAT,EAAiBC,OAAO,CAACC,QAAzB;AACAT,IAAAA,CAAC,CAACO,MAAF,CAAS,OAAT,EAAkBC,OAAO,CAACE,KAA1B;AACD;;AAED,SAAOV,CAAP,CAhBmC,CAkBnC;AACA;AACA;AACA;AACA;AACA;AACD","sourcesContent":["export default function authHeader() {\r\n  const h = new Headers();\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  h.append('Content-Type','application/json')\r\n\r\n  const session={\r\n    username : localStorage.getItem('user'),\r\n    token: localStorage.getItem('token'),\r\n  }\r\n\r\n  if(session.user && session.token){\r\n    h.append('user', session.username);\r\n    h.append('token', session.token);\r\n  }\r\n\r\n  return h ;\r\n\r\n  // if (user && user.accessToken) {\r\n  //    return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n  // //  return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  // } else {\r\n  //   return {};\r\n  // }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}