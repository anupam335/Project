{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\frontend\\\\myapp\\\\src\\\\components\\\\profile\\\\admin\\\\adminProfile.component.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../../../authentication/auth.service\";\nimport userService from \"../../../authentication/user.service\";\nimport AdminNavbarProfile from \"./AdminNavbarProfile\";\nimport ServiceCardContent from \"./ServiceCardContent\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AdminProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      if (!this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      redirect: false,\n      userReady: false,\n      data: [],\n      currentUser: {\n        username: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (currentUser && currentUser.category === \"ADMIN\") {\n      userService.getPublicContent(currentUser.id).then(Response => this.setState({\n        data: Response.data\n      })).catch();\n      this.setState({\n        currentUser: currentUser,\n        userReady: true,\n        redirect: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.userReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AdminNavbarProfile, {\n            id: this.state.data.userId,\n            name: this.state.data.fName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ServiceCardContent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron text-center\",\n          style: {\n            width: '50%',\n            marginLeft: '25%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Invalid Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-warning\",\n              children: \"Login Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/Project/frontend/myapp/src/components/profile/admin/adminProfile.component.js"],"names":["React","Component","Button","Redirect","AuthService","userService","AdminNavbarProfile","ServiceCardContent","Link","AdminProfile","constructor","props","renderRedirect","state","redirect","userReady","data","currentUser","username","componentDidMount","getCurrentUser","category","getPublicContent","id","then","Response","setState","catch","render","userId","fName","width","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAClDS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,cAZmB,GAYF,MAAM;AACrB,UAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AACxB,4BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;AACF,KAlBkB;;AAGjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAJF,KAAb;AAOD;;AAUDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMF,WAAW,GAAGb,WAAW,CAACgB,cAAZ,EAApB;;AACA,QAAIH,WAAW,IAAIA,WAAW,CAACI,QAAZ,KAAyB,OAA5C,EAAqD;AACnDhB,MAAAA,WAAW,CAACiB,gBAAZ,CAA6BL,WAAW,CAACM,EAAzC,EAA6CC,IAA7C,CAAkDC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAES,QAAQ,CAACT;AAAjB,OAAd,CAA9D,EAAsGW,KAAtG;AACA,WAAKD,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEA,WAAf;AAA4BF,QAAAA,SAAS,EAAE,IAAvC;AAA6CD,QAAAA,QAAQ,EAAE;AAAvD,OAAd;AACD;AACF;;AAEDc,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,6BACE;AAAA,kBACI,KAAKf,KAAL,CAAWE,SAAZ,gBACC;AAAA,kCACE,QAAC,kBAAD;AAAoB,YAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,IAAX,CAAgBa,MAAxC;AAAgD,YAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWG,IAAX,CAAgBc;AAAtE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAKC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAuC,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAG,KAAT;AAAgBC,YAAAA,UAAU,EAAG;AAA7B,WAA9C;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,eAEQ;AAAA;AAAA;AAAA;AAAA,kBAFR,eAGE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAA,mCAAkB,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA/CiD","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../../../authentication/auth.service\";\r\nimport userService from \"../../../authentication/user.service\";\r\nimport AdminNavbarProfile from \"./AdminNavbarProfile\";\r\nimport ServiceCardContent from \"./ServiceCardContent\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class AdminProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: false,\r\n      userReady: false,\r\n      data: [],\r\n      currentUser: { username: \"\" }\r\n    };\r\n\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (!this.state.redirect) {\r\n      return (\r\n        <Redirect to=\"/\" />\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n    if (currentUser && currentUser.category === \"ADMIN\") {\r\n      userService.getPublicContent(currentUser.id).then(Response => this.setState({ data: Response.data })).catch()\r\n      this.setState({ currentUser: currentUser, userReady: true, redirect: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {(this.state.userReady) ?\r\n            <div>\r\n              <AdminNavbarProfile id={this.state.data.userId} name={this.state.data.fName} />\r\n              <ServiceCardContent />\r\n            </div> :\r\n            <div className=\"jumbotron text-center\" style={{width : '50%', marginLeft : '25%'}}>\r\n              <h1>Invalid Session</h1>\r\n              <br /><br />\r\n              <Link to=\"/login\"><Button className=\"btn-warning\">Login Again</Button></Link>\r\n            </div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}