{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\frontend\\\\myapp\\\\src\\\\components\\\\profile\\\\worker\\\\WorkerListByType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport base_url from '../../../api/bootapi';\nimport authHeader from '../../../authentication/auth-header';\nimport authService from '../../../authentication/auth.service';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkerListByType = () => {\n  _s();\n\n  const [workData, setWorkData] = useState();\n  let btnRef = useRef();\n  let btnRefs = useRef();\n  var url = `${base_url}/user/getWorkDescCat/${authService.getCurrentUser().category}`;\n  useEffect(() => {\n    axios.get(url, {\n      headers: authHeader()\n    }).then(res => {\n      console.log(res.data);\n      setWorkData(res.data);\n    });\n  }, [url]);\n\n  const applyJob = workId => {\n    axios.get(`${base_url}/user/applyForJob/${authService.getCurrentUser().id}/${workId}`, {\n      headers: authHeader()\n    }).then(res => {\n      console.log(res.data);\n      toast.success(\"Applied For Job Successfully\");\n    }, error => {\n      toast.error(\"Already Applied\");\n    });\n\n    if (btnRef.current) {\n      btnRef.current.setAttribute(\"disabled\", \"disabled\");\n    }\n  };\n\n  const cancelJob = workIds => {\n    axios.delete(`${base_url}/user/deleteAppliedJob/${authService.getCurrentUser().id}/${workIds}`, {\n      headers: authHeader()\n    }).then(res => {\n      console.log(res.data);\n      toast.success(\"Applied Job Cancelled Successfully\");\n    }, error => {\n      toast.error(\"Not Applied for the Job \");\n    });\n\n    if (btnRefs.current) {\n      btnRefs.current.setAttribute(\"disabled\", \"disabled\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), !workData ? \"No Work Found\" : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            color: 'black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Work Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Click To Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Click To Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"table-success\",\n        style: {\n          fontWeight: 'bold'\n        },\n        children: workData.map((workDescription, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: workDescription.workAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: workDescription.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: workDescription.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: workDescription.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              ref: btnRef,\n              type: \"button\",\n              onClick: () => {\n                applyJob(workDescription.workId);\n              },\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              ref: btnRefs,\n              type: \"button\",\n              onClick: () => {\n                cancelJob(workDescription.workId);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n};\n\n_s(WorkerListByType, \"UtFxrK1bzJAdfur7BAEaeCxostk=\");\n\n_c = WorkerListByType;\nexport default WorkerListByType;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkerListByType\");","map":{"version":3,"sources":["E:/Project/frontend/myapp/src/components/profile/worker/WorkerListByType.js"],"names":["React","useEffect","useRef","useState","axios","Button","base_url","authHeader","authService","toast","ToastContainer","WorkerListByType","workData","setWorkData","btnRef","btnRefs","url","getCurrentUser","category","get","headers","then","res","console","log","data","applyJob","workId","id","success","error","current","setAttribute","cancelJob","workIds","delete","backgroundColor","color","fontWeight","map","workDescription","index","workAmount","description","location"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap';\r\nimport base_url from '../../../api/bootapi';\r\nimport authHeader from '../../../authentication/auth-header';\r\nimport authService from '../../../authentication/auth.service';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\nconst WorkerListByType = () => {\r\n\r\n    const [workData, setWorkData] = useState();\r\n\r\n    let btnRef = useRef();\r\n    let btnRefs = useRef();\r\n\r\n    var url=`${base_url}/user/getWorkDescCat/${authService.getCurrentUser().category}`;\r\n\r\n    useEffect(() => {\r\n        axios.get(url,{headers:authHeader()}).then((res) => {\r\n            console.log(res.data);\r\n            setWorkData(res.data);\r\n        });\r\n    },[url]);\r\n\r\n    const applyJob=(workId)=>{\r\n        axios.get(`${base_url}/user/applyForJob/${authService.getCurrentUser().id}/${workId}`,{headers:authHeader()}).then((res) => {\r\n            console.log(res.data);\r\n            toast.success(\"Applied For Job Successfully\");\r\n        },(error)=>{\r\n            toast.error(\"Already Applied\");\r\n        });\r\n        \r\n        if(btnRef.current){\r\n            btnRef.current.setAttribute(\"disabled\", \"disabled\");\r\n          }\r\n    }\r\n\r\n    const cancelJob=(workIds)=>{\r\n        axios.delete(`${base_url}/user/deleteAppliedJob/${authService.getCurrentUser().id}/${workIds}`,{headers:authHeader()}).then((res) => {\r\n            console.log(res.data);\r\n            toast.success(\"Applied Job Cancelled Successfully\");\r\n        },(error)=>{\r\n            toast.error(\"Not Applied for the Job \");\r\n        });\r\n        \r\n        if(btnRefs.current){\r\n            btnRefs.current.setAttribute(\"disabled\", \"disabled\");\r\n          }\r\n    }\r\n\r\n    return <div>\r\n        <ToastContainer />\r\n        {\r\n        !workData ? (\"No Work Found\") : (\r\n            <table className=\"table table-bordered\">\r\n                <thead className=\"table-dark\" style={{backgroundColor:'white'}}>\r\n                    <tr style={{color:'black'}}>\r\n                        <th className=\"text-center\">Salary</th>\r\n                        <th className=\"text-center\">Work</th>\r\n                        <th className=\"text-center\">Location</th>\r\n                        <th className=\"text-center\">Work Type</th>\r\n                        <th className=\"text-center\">Click To Apply</th>\r\n                        <th className=\"text-center\">Click To Cancel</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"table-success\" style={{fontWeight:'bold'}}>\r\n                    {\r\n                        workData.map((workDescription, index) => (\r\n                            <tr key={index}>\r\n                                <td className=\"text-center\">{workDescription.workAmount}</td>\r\n                                <td className=\"text-center\">{workDescription.description}</td>\r\n                                <td className=\"text-center\">{workDescription.location}</td>\r\n                                <td className=\"text-center\">{workDescription.category}</td>\r\n                                <td className=\"text-center\"><Button ref={btnRef} type=\"button\" onClick={()=>{applyJob(workDescription.workId)}}>Apply</Button></td>\r\n                                <td className=\"text-center\"><Button ref={btnRefs} type=\"button\" onClick={()=>{cancelJob(workDescription.workId)}}>Cancel</Button></td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n    </div>\r\n\r\n}\r\nexport default WorkerListByType;"]},"metadata":{},"sourceType":"module"}